
@model AA.HRMS.Interfaces.IDeductionViewModel

@{
    ViewBag.Title = "DeActivate Deduction";
}

<div class="modal-header">
    <h3>@ViewBag.Title</h3>
    <button type="button" class="close" data-dismiss="modal">&times;</button>
</div>

@using (Html.BeginForm("DeleteEmployeeDeduction", "CompanySetup", FormMethod.Post, new { id = "DeleteEmployeeDeduction" }))
{
    @Html.AntiForgeryToken()

<div class="modal-body">

    @if (!string.IsNullOrEmpty(Model.ProcessingMessage))
    {

        <div class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true"><i class="notika-icon notika-close"></i></span></button> @Model.ProcessingMessage
        </div>
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true"><i class="notika-icon notika-close"></i></span></button> @Html.ValidationSummary()
        </div>
    }


    <div class="form-example-int">
        <div class="form-group">
            <label>Deduction Type:</label>
            <div class="">
              <input id="deductionName" disabled name="deductionName" type="text" class="form-control " , value="@Model.DeductionName" />

            </div>
        </div>
    </div>

    <input type="hidden" id="companyId" name="companyId" value="@Model.CompanyId" />

    <input type="hidden" id="deductionId" name="deductionId" value="@Model.DeductionId" />

    <input type="hidden" id="employeeId" name="employeeId" value="@Model.EmployeeId" />

    <input name="url" id="url" value="@Model.URL" hidden />
</div>




    <div class="modal-footer">
        <button type="submit" name="submitButton" class="btn btn-danger">DeActivate</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
    </div>

}

<script type="text/javascript">

        $(document).ready(function () {

            $("span.ui-dialog-title").text('Add New Employee Deduction');

            $('#btnCancel').click(function () {
                window.location.href = '/EmployeeDeduction/EmployeeDeduction';
                return false;
            });

            $('#EmployeeDeductionId').change(function () {
                $('#EmployeeId').trigger("propertychange");
            });

            $('#EmployeeDeductionId').change(function () {
                $('#EmployeeId').trigger("propertychange");
            });

            $('#EmployeeDeductionId').bind('input propertychange', function () {
                $('#btnSubmit').prop("class", "grayButton");
                $('#btnSubmit').prop("disabled", true);

                var EmployeeOkay = $('#EmployeeDeductionId').val() > 0;

                if (EmployeeOkay) {
                    $('#btnSubmit').prop("class", "blueButton");
                    $('#btnSubmit').prop("disabled", false);
                }
            });

        });

</script>


